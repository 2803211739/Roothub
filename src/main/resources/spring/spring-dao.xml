<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder ignore-unresolvable="true" file-encoding="UTF-8" location="classpath:jdbc.properties" />

	<bean id="dataSourceProperties" class="wang.miansen.roothub.common.dao.jdbc.init.DataSourceProperties">
		<!-- 配置连接池属性 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="schema" value="${jdbc.schema}" />
		<property name="data" value="${jdbc.data}" />
	</bean>
	
	<bean id="dataSource" class="wang.miansen.roothub.common.dao.jdbc.spring.DataSourceConfiguration">
		<!-- 配置连接池属性 -->
		<property name="dataSourceProperties" ref="dataSourceProperties" />
	</bean>
	
	<!-- 2.数据库连接池 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		配置连接池属性
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		c3p0连接池的私有属性
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		关闭连接后不自动commit
		<property name="autoCommitOnClose" value="false" />
		获取连接超时时间
		<property name="checkoutTimeout" value="10000" />
		当获取连接失败重试次数
		<property name="acquireRetryAttempts" value="2" />
	</bean> -->

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 扫描 model 包 使用别名 -->
		<property name="typeAliasesPackage"
				  value="wang.miansen.roothub.modules.collect.model,
				  		 wang.miansen.roothub.modules.follow.model,
				  		 wang.miansen.roothub.modules.integral.model,
				  		 wang.miansen.roothub.modules.node.model,
				  		 wang.miansen.roothub.modules.notice.model,
				  		 wang.miansen.roothub.modules.reply.model,
				  		 wang.miansen.roothub.modules.security.model,
				  		 wang.miansen.roothub.modules.sys.model,
				  		 wang.miansen.roothub.modules.tab.model,
				  		 wang.miansen.roothub.modules.tag.model,
				  		 wang.miansen.roothub.modules.topic.model,
				  		 wang.miansen.roothub.modules.user.model,
				  		 wang.miansen.roothub.modules.visit.model,
				  		 wang.miansen.roothub.modules.vote.model"/>
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/**/*.xml"/>
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage"
				  value="wang.miansen.roothub.modules.collect.dao,
				  		 wang.miansen.roothub.modules.follow.dao,
				  		 wang.miansen.roothub.modules.integral.dao,
				  		 wang.miansen.roothub.modules.node.dao,
				  		 wang.miansen.roothub.modules.notice.dao,
				  		 wang.miansen.roothub.modules.reply.dao,
				  		 wang.miansen.roothub.modules.security.dao,
				  		 wang.miansen.roothub.modules.sys.dao,
				  		 wang.miansen.roothub.modules.tab.dao,
				  		 wang.miansen.roothub.modules.tag.dao,
				  		 wang.miansen.roothub.modules.topic.dao,
				  		 wang.miansen.roothub.modules.user.dao,
				  		 wang.miansen.roothub.modules.visit.dao,
				  		 wang.miansen.roothub.modules.vote.dao"/>
	</bean>
</beans>